10-3-25 4:50pm Started thinking through how to make a Matrix class work. Has rows and columns, but unsure what the types are for those. Can do multiplication with another Matrix, and can do addition with another Matrix
10-4-25 1:46pm Matrix has a 2d float array called data. Also has a length and depth field (respectively rows and columns). all fields private with getters/setters. A matrix can do multiplication and addition. Working on implementing logic of these methods. Referencing google for how matrix addition/multiiplication work, algorithmically
10-4-25 1:56pm For matrix addition, both matrices must be n*n to be added. if they are, just add element by element into a new matrix. 
10-4-25 2:04pm implemented addition. gonna try to learn how to implement multiplication algorithmically.
10-4-25 2:41pm reference: https://www.geeksforgeeks.org/maths/matrix-multiplication/. For matrix mult. to be defined as operation between two matrices A and B, A must have the same amount of rows as B has columns. The multiplication then returns a new matrix that is ordered by the amount of columns in A, and the amount of rows in B. 
10-4-25 4:49pm stuck on logic for how to make multiplication work so instead just testing addition to make sure its logic is proper. spoiler alert: it is 
10-5-25 4:27pm reference: https://en.wikipedia.org/wiki/Matrix_multiplication_algorithm going to use this for iterative approach to matrix multiplication method. going to alter the algorithm to use the methods and privacy I have already defined. now want to test to make sure this algorithm will be sufficient
10-5-25 5:13pm logic errors in how i am understanding filling a Matrix with numbers. gotta think through how to actually go about filling a matrix with values 
10-5-25 9:04pm fixed logic error in how i was assigning new matrix rows and columns which was causing Arrayoutofboundsexception bc it was not the correct dimensions when trying to fill it. Also fixed logic error when checking dimensions of add(). I was not properly checking whether both dimensions were equal so some m x n's could get thru where m != n. both methods now work. onto sigmoid function 
10-5-25 11:12pm removed unnecessary and wasteful getter calls in class methods. fields are private but we are still in the class so we dont need to use getters
10-6-25 10:14am starting on Main. adding weights, biases, inputs, and output Matrices and filling them with the predetermined values 
10-6-25 2:50pm added hadamard() and transpose() methods. Tranpose makes a new matrix that converts rows from original matrix to columns in new one, and vice versa. hadamard multiples matrices element by element like addition algorithm. logic errors still in how transpose is filling the new matrix (getting AOOB error)
10-8-25 1:12pm fixed logic errors in transpose(). transposing swaps rows and columns so that a matrix that is transposed goes from being an m x n to an n x m, where the rows become the columns and vice cersa. works as intended now and will not go OOB. 